[{"title":"远程用户数据管理jar包｜数据库服务","date":"2021-01-01T16:00:00.000Z","path":"2021/01/02/远程用户数据管理jar包｜数据库服务/","content":"<p></p>\n\n\n<h4 id=\"包名：uiuing-top-CloudSave\"><a href=\"#包名：uiuing-top-CloudSave\" class=\"headerlink\" title=\"包名：uiuing.top.CloudSave\"></a>包名：uiuing.top.CloudSave</h4><p><strong>版本：0.1</strong></p>\n<h4 id=\"功能实现：\"><a href=\"#功能实现：\" class=\"headerlink\" title=\"功能实现：\"></a>功能实现：</h4><blockquote>\n<p>用户管理<br>登陆、注册功能实现</p>\n</blockquote>\n<h4 id=\"特点：\"><a href=\"#特点：\" class=\"headerlink\" title=\"特点：\"></a>特点：</h4><blockquote>\n<p>数据永久存储<br>传输&amp;存储 两层特殊算法加密，安全性高<br>轻量化，访问快捷</p>\n</blockquote>\n<p></p>\n\n<a id=\"more\"></a>\n\n<p>下载链接：<a href=\"https://uiuing.lanzous.com/iN2kCjxskhc\" title=\"GO\">GO</a></p>\n<p><strong>使用方法：</strong></p>\n<p>导入第三包教程：<br><a href=\"https://www.xiazaiba.com/jiaocheng/52404.html\" title=\"IDEA\">IDEA</a><br><a href=\"https://www.cnblogs.com/wxdestiny/p/9752281.html\" title=\"Eclipse\">Eclipse</a></p>\n<p></p>\n\n<p>引入包，继承类</p>\n<p><img src=\"http://81.71.19.170/imgs/2021_1_2/code.png\"></p>\n<p>直接引用：<br><img src=\"http://81.71.19.170/imgs/2021_1_2/code2.png\"></p>\n<hr>\n<h4 id=\"咨询-amp-购买-amp-定制-联系邮箱：-99-111-x6f-x6c-x75-x69-117-x40-113-x71-x2e-x63-x6f-x6d\"><a href=\"#咨询-amp-购买-amp-定制-联系邮箱：-99-111-x6f-x6c-x75-x69-117-x40-113-x71-x2e-x63-x6f-x6d\" class=\"headerlink\" title=\"咨询&amp;购买&amp;定制 联系邮箱：&#99;&#111;&#x6f;&#x6c;&#x75;&#x69;&#117;&#x40;&#113;&#x71;&#x2e;&#x63;&#x6f;&#x6d;\"></a>咨询&amp;购买&amp;定制 联系邮箱：<a href=\"mailto:&#99;&#111;&#x6f;&#x6c;&#x75;&#x69;&#117;&#x40;&#113;&#x71;&#x2e;&#x63;&#x6f;&#x6d;\">&#99;&#111;&#x6f;&#x6c;&#x75;&#x69;&#117;&#x40;&#113;&#x71;&#x2e;&#x63;&#x6f;&#x6d;</a></h4><p><br></br></p>\n<p><strong>预期版本v_1.0:</strong></p>\n<blockquote>\n<p>用户数据管理<br>新增特殊数据服务</p>\n</blockquote>\n","excerpt":"包名：uiuing.top.CloudSave版本：0.1 功能实现： 用户管理登陆、注册功能实现 特点： 数据永久存储传输&amp;存储 两层特殊算法加密，安全性高轻量化，访问快捷","categories":[{"name":"Whimsical","slug":"Whimsical","permalink":"http://uiuing.top/categories/Whimsical/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://uiuing.top/tags/Java/"}]},{"title":"AI聊天程序之极限思想的应用v1.0","date":"2020-12-23T16:00:00.000Z","path":"2020/12/24/AIChat_v1_0/","content":"<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><ul>\n<li><strong>前言</strong></li>\n<li><strong>1.分析与架构设计</strong></li>\n<li><ul>\n<li>1.1 需求分析</li>\n</ul>\n</li>\n<li><ul>\n<li>1.2 逻辑概念模型设计</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>1.2.1 总体架构设计</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>1.2.2 语言库系统设计</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>1.2.3 对话系统设计</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>2. 极限思想实现对话核心功能</strong></li>\n<li><ul>\n<li>2.1 物理模型设计</li>\n</ul>\n</li>\n<li><ul>\n<li>2.2 JAVA代码实现方法</li>\n</ul>\n</li>\n<li><strong>3. 后记</strong></li>\n</ul>\n<a id=\"more\"></a>\n<p><br></br></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p> 高中时我就曾有过要写一个智能聊天的程序，但当时能力有限，也只是一个想法而已.</p>\n<p>刚步入大学时学习了”图灵测试“相关知识，刚好我也在学习编程，便又产生了兴趣，但被困于实现方法，当初并未实现，当时我能想到且能实现但方法有两种：</p>\n<p>1.编写关键词数据库，用户输入之后与关键词匹配，然后重组再输出。我认为不够智能，便作罢了.</p>\n<p>2.根据汉字的语法结构来分析处理，但其工程量太庞大，也作罢了.</p>\n<p>但在几次数学课的学习以后，被我找到了问题的解决方法，于是便有了这篇文章.</p>\n<p><br></br></p>\n<h2 id=\"1-分析与架构设计\"><a href=\"#1-分析与架构设计\" class=\"headerlink\" title=\"1.分析与架构设计\"></a>1.分析与架构设计</h2><p></p>\n\n<h3 id=\"1-1-需求分析\"><a href=\"#1-1-需求分析\" class=\"headerlink\" title=\"1.1 需求分析\"></a>1.1 需求分析</h3><p><strong>用户角度分析：</strong></p>\n<blockquote>\n<p>当用户输入字符串以后，得到一个极限接近于人类语言的字符串回复.</p>\n</blockquote>\n<p><strong>技术角度分析：</strong></p>\n<blockquote>\n<p>1.需要一个处理数据的程序</p>\n<p>2.数据处理需要数据依据，所有需要一个存储数据的地方</p>\n<p>3.存储的数据需要一个数据来源</p>\n</blockquote>\n<p><br></br></p>\n<h3 id=\"1-2-逻辑概念模型设计\"><a href=\"#1-2-逻辑概念模型设计\" class=\"headerlink\" title=\"1.2 逻辑概念模型设计\"></a>1.2 逻辑概念模型设计</h3><p></p>\n\n<h4 id=\"1-2-1-总体架构设计\"><a href=\"#1-2-1-总体架构设计\" class=\"headerlink\" title=\"1.2.1 总体架构设计\"></a>1.2.1 总体架构设计</h4><p>根据需求分析得知，我们可以将整个架构设计出三个功能组件：<br><strong>组件一：</strong> 名称：训练系统；负责训练数据，生产出能被使用的数据，通过Python/Java实现；<br><strong>组件二：</strong> 名称：语言库系统；负责存储数据，存储需要被使用的数据，通过Mysql实现；<br><strong>组件三：</strong> 名称：对话系统；负责处理数据，调用存储的数据并结合用户输入的数据给出回馈，通过JAVA实现；</p>\n<p> 程序结构图：<br><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_1.png\"><br>之所以分成三个独立组件，主要原因是为了避免数据来源、数据存储、数据处理之间可能存在的相互依赖。<br>建立组件之间的特定接口来负责传输数据，可提高程序可读性、与编写专注度，还可达到具体问题具体分析，减少调试时间。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">注：该文章主要分析：如何通过极限思想实现对话系统的核心功能，固不深入探究训练系统与语言库系统的实现</span><br></pre></td></tr></table></figure>\n<p><br></br></p>\n<h4 id=\"1-2-2-语言库系统设计\"><a href=\"#1-2-2-语言库系统设计\" class=\"headerlink\" title=\"1.2.2 语言库系统设计\"></a>1.2.2 语言库系统设计</h4><p>Mysql逻辑模型 表结构如下：<br><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_2.png\"><br>列一负责存储提问数据，列n+1负责存储回答。<br>逻辑上按列式存储设计，物理上按行式存储编写。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">注：为了数据使用方便，固不进行范式化</span><br></pre></td></tr></table></figure>\n<p><br></br></p>\n<h4 id=\"1-2-3-对话系统设计\"><a href=\"#1-2-3-对话系统设计\" class=\"headerlink\" title=\"1.2.3 对话系统设计\"></a>1.2.3 对话系统设计</h4><p>通过双线程调用两个方面的数据：用户输入数据，语言库系统数据；<br>将这两个数据进行匹配计算，之后再将计算所生成的数据回馈给用户。<br><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_3.png\"><br><br></br></p>\n<h2 id=\"2-极限思想实现对话核心功能\"><a href=\"#2-极限思想实现对话核心功能\" class=\"headerlink\" title=\"2. 极限思想实现对话核心功能\"></a>2. 极限思想实现对话核心功能</h2><h3 id=\"2-1-物理模型设计\"><a href=\"#2-1-物理模型设计\" class=\"headerlink\" title=\"2.1 物理模型设计\"></a>2.1 物理模型设计</h3><p>到此为止，整个程序的架构设计完成了，接下来就是对话系统的核心功能了。<br>除了从“前言”中提到的“两个实现方法”以外，我似乎从数学课中找到了第三种实现方法——应用极限思想实现数据匹配计算功能。<br>极限不只是高等数学中的一个知识点，极限是一种思想，它源于生活。<br>在计算机中要实现对极限对描述也是很简单的，例如求0～10以内的正整数中，极限接近于10的数，那么只需要遍历1～9的正整数，再求出其最大值，便求出来了。<br>R语言实现：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">整型数组x区间：【<span class=\"number\">0</span>，<span class=\"number\">10</span>），整型y=<span class=\"number\">10</span> </span><br><span class=\"line\">求x中极限接近y的数值的位置</span><br><span class=\"line\">*/</span><br><span class=\"line\">x = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>)</span><br><span class=\"line\">which(a==<span class=\"built_in\">max</span>(a),arr.ind=<span class=\"literal\">TRUE</span>);</span><br></pre></td></tr></table></figure>\n<p>要实现对话系统，我们不可能通过训练系统提前将所有可能发生的情况，全部都训练出数据进行存储，如果这样，编写对话系统哪还需要思考，只需要写一堆条件语句就好，但其工作量也是不容小嘘。</p>\n<p>我们知道每个人的说话方式都不同，例如我们常用的问候语之一，南方人会说“你吃饭了吗？”，北方人则可能会说“饭你吃了吗？”，语言结构不同，但这两句话表达的意思都是一样的，其结构都是有规律的，都表示询问“吃饭”这个行为是否为过去时，所以在计算机里我们不能让数据以相等的方式来进行匹配，我们需要应用极限的思想，让两个数据极限可能相等即可。<br>通过训练系统我们可以找到语言的结构规律，对话系统负责分析输入数据的语言结构与数据库中已有数据的语言结构最为接近的数据项。<br>“你吃饭了吗？”这句话语言结构最接近的还是“饭你吃了吗？”吧～ 不可能是“现在几点了？”，如果是，那么则是开发者的问题。</p>\n<p>所以将这种思想扩展一下：<br><strong>只要当我们用户输入的数据，无限接近于数据库中某一数据元素中的某一数据项时，即当“输入”、“已存在”的两个数据极限相等时，便可以根据该数据项找到与之有依赖关系的其他数据，程序便能灵活的作出回馈了。</strong></p>\n<p>那么可以通过三个方法来求如输入数据的极限：1.匹配字符串长度；2.匹配字符串关键字；3.匹配语法结构；<br>实现思路如下：<br><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_4.png\"><br>既然当两个数据匹配成功时计算机认为其相等，“有极限近似”的两个数据，那么肯定也会“极限不近似”的数据、“极限远离”的两个数据，在数学领域我并不知道有没有这个概念，<strong>我理解“极限远离”其含义为：逻辑上存在关联，但在物理上并未建立联系的两个数据的关系，描述为极限远离。</strong></p>\n<p>如果这样理解，那么便能让程序更加“智能”<br>一般情况下当用户输入数据时程序会基于回馈，此时回馈数据是输入数据经过极限匹配所得出来的运算结果。<br>程序回馈完数据以后，就相当于程序运行了一次，并且完全结束了，第一次运算与第二次运算显然是无任何联系的。</p>\n<p>但从逻辑上是存在关联的，把用户也想像成另一个对话系统即可，用户得到了输入数据（该输入数据为对话系统的回馈），经过用户大脑的对话系统判断以后会给程序一个回馈（该回馈为对话系统的输入数据）<br>如下：<br>对话系统回馈数据 == 用户输入数据<br>对话系统输入数据 == 用户回馈数据</p>\n<p>我设计的对话系统给出的回馈是经过计算的、是有道理依据的，用户给出的回馈更是经过强大计算的、有道理依据的、因为其本就是经过人类思考的。</p>\n<p>既然训练系统中的依据是“人”，那么在对话系统中也可以把“人的思考”纳入程序计算中的一部分。<br>实现方法如图：<br><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_5.png\"><br>从“极限远离”的两个数据中分析其可能存在逻辑联系，并建立其物理连接，保存至数据库中。<br>让程序“边用边学”、“边学边用”，实现自我迭代。<br><br></br></p>\n<h3 id=\"2-2-JAVA代码实现方法\"><a href=\"#2-2-JAVA代码实现方法\" class=\"headerlink\" title=\"2.2 JAVA代码实现方法\"></a>2.2 JAVA代码实现方法</h3><blockquote>\n<p><strong>使用JAVA实现 依赖与极限思想的数据匹配 算法</strong><br>需要注意的是整个数据匹配算法，就是一个极限的实现：找出极限相等的两个数据</p>\n</blockquote>\n<p>这里使用最基础的java实现，不涉及容器和多线程，主要目的在于逻辑实现</p>\n<p>引用数据库中的数据<br>引用用户输入的数据</p>\n<p><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_6.png\"></p>\n<blockquote>\n<p>例此时：<br>输入数据：hadoop<br>数据库数据： asfdsdsa   sfdggtr  dv  haoppd aodpw   dsafdffwfcdcwe   hadpod   hadoops</p>\n</blockquote>\n<hr>\n<p><strong>第一步数据匹配，进行字符串匹配</strong></p>\n<p><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_7.png\"></p>\n<blockquote>\n<p>第一次匹配运算后：<br>输入数据：hadoop<br>数据库数据： asfdsdsa   sfdggtr   haoppd aodpw hadpod  hadoops</p>\n</blockquote>\n<hr>\n<p><strong>第二步数据匹配，进行关键字匹配</strong></p>\n<p><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_8.png\"></p>\n<blockquote>\n<p>第二次匹配运算后：<br>输入数据：hadoop<br>数据库数据： haopp  hadpod  hadoops  aodpw</p>\n</blockquote>\n<hr>\n<p><strong>第三步数据匹配，进行语法结构匹配</strong><br><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_9.png\"></p>\n<blockquote>\n<p>第三次匹配运算后：<br>输入数据：hadoop<br>数据库数据：hadoops</p>\n<hr>\n<p>回馈举例：<br>    “ <a href=\"https://hadoop.apache.org/\">https://hadoop.apache.org/</a> ”</p>\n</blockquote>\n<hr>\n<p>实现对话系统代码的模块化设计：<br><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_10.png\"></p>\n<p>在主方法中实现整个程序：<br><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_11.png\"><br><br></br></p>\n<h2 id=\"3-后记\"><a href=\"#3-后记\" class=\"headerlink\" title=\"3. 后记\"></a>3. 后记</h2><p>1.在终端中运行该程序：<br><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_12.png\"><br>2.程序功能展示：<br><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_13.png\"><br><br></br><br><strong>拓展思考：</strong><br><strong>既然是使用极限思想探究出的算法，那么是否可以将该算法使用其他语言实现？<br>又可怎么应用？</strong><br>答：<br>可以，基于HTML/CSS/Javascript可以在网页上实现该功能；<br>使用Python实现更为惊艳，使用基于itchat的Python库：wxpy，可实现类似“微软小冰”的智能聊天程序，尽管不可能达到“微软小冰”的智能程度，但也能当个玩具。<br>将此程序使用Python重新开发，安置于服务器上，对外提供访问接口，任何开发者只需要调用接口便能使用，开发者向Api Post数据由服务器处理并Get回馈。<br>设计框架如下：</p>\n<p><img src=\"http://81.71.19.170/imgs/2020_12_24/2_12_24_14.png\"></p>\n<hr>\n<p>感谢～</p>\n<blockquote>\n<p><strong>语言数据库完善开发以后会托管到GitHub上开源，同所有感兴趣的开发者们共同开发!<br>GitHub:   <a href=\"https://github.com/uiuing\">github.com/uiuing</a><br>Blog：<a href=\"http://uiuing.top/\">uiuing.top</a><br>CSDN: <a href=\"https://blog.csdn.net/qq_41103843\">https://blog.csdn.net/qq_41103843</a></strong></p>\n</blockquote>\n","excerpt":"目录 前言 1.分析与架构设计 1.1 需求分析 1.2 逻辑概念模型设计 1.2.1 总体架构设计 1.2.2 语言库系统设计 1.2.3 对话系统设计 2. 极限思想实现对话核心功能 2.1 物理模型设计 2.2 JAVA代码实现方法 3. 后记","categories":[{"name":"Whimsical","slug":"Whimsical","permalink":"http://uiuing.top/categories/Whimsical/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://uiuing.top/tags/Java/"}]},{"title":"Mysql常用命令检索整理","date":"2020-11-27T16:00:00.000Z","path":"2020/11/28/MYSQL_Command_collection/","content":"<h2 id=\"MYSQL常用命令\"><a href=\"#MYSQL常用命令\" class=\"headerlink\" title=\"MYSQL常用命令\"></a>MYSQL常用命令</h2><p><code>大杂烩</code></p>\n<p></p>\n    <a id=\"more\"></a>\n\n\n\n<pre><code>1.导出整个数据库\n    mysqldump -u 用户名 -p –default-character-set=latin1 数据库名 &gt; 导出的文件名(数据库默认编码是latin1)\n    mysqldump -u wcnc -p smgp_apps_wcnc &gt; wcnc.sq\n\n2.导出一个表\n    mysqldump -u 用户名 -p 数据库名 表名&gt; 导出的文件名\n    mysqldump -u wcnc -p smgp_apps_wcnc users&gt; wcnc_users.sql\n\n3.导出一个数据库结构\n    mysqldump -u wcnc -p -d –add-drop-table smgp_apps_wcnc &gt;d:wcnc_db.sql\n-d 没有数据 –add-drop-table 在每个create语句之前增加一个drop table\n\n4.导入数据库\n    A:常用source 命令\n    进入mysql数据库控制台，\n    如mysql -u root -p\n    mysql&gt;use 数据库\n    然后使用source命令，后面参数为脚本文件(如这里用到的.sql)\n    mysql&gt;source wcnc_db.sql\n\nB:使用mysqldump命令\n    mysqldump -u username -p dbname &lt; filename.sql\n\nC:使用mysql命令\n    mysql -u username -p -D dbname &lt; filename.sql\n\n一、启动与退出\n1、进入MySQL：启动MySQL Command Line Client（MySQL的DOS界面），直接输入安装时的密码即可。此时的提示符是：mysql&gt;\n2、退出MySQL：quit或exit\n\n二、库操作\n1、、创建数据库\n    命令：create database &lt;数据库名&gt;\n    例如：建立一个名为xhkdb的数据库\n    mysql&gt; create database xhkdb;\n2、显示所有的数据库\n    命令：show databases （注意：最后有个s）\n    mysql&gt; show databases;\n3、删除数据库\n    命令：drop database &lt;数据库名&gt;\n    例如：删除名为 xhkdb的数据库\n    mysql&gt; drop database xhkdb;\n4、连接数据库\n    命令：use &lt;数据库名&gt;\n    例如：如果xhkdb数据库存在，尝试存取它：\n    mysql&gt; use xhkdb;\n    屏幕提示：Database changed\n5、查看当前使用的数据库\n    mysql&gt; select database();\n6、当前数据库包含的表信息：\nmysql&gt; show tables; （注意：最后有个s）\n三、表操作，操作之前应连接某个数据库\n1、建表\n    命令：create table &lt;表名&gt; ( &lt;字段名&gt; &lt;类型&gt; [,..&lt;字段名n&gt; &lt;类型n&gt;]);\n    mysql&gt; create table MyClass(\n&gt; id int(4) not null primary key auto_increment,\n&gt; name char(20) not null,\n&gt; sex int(4) not null default ’′,\n&gt; degree double(16,2));\n2、获取表结构\n命令：desc 表名，或者show columns from 表名\nmysql&gt;DESCRIBE MyClass\nmysql&gt; desc MyClass;\nmysql&gt; show columns from MyClass;\n3、删除表\n命令：drop table &lt;表名&gt;\n例如：删除表名为 MyClass 的表\nmysql&gt; drop table MyClass;\n4、插入数据\n命令：insert into &lt;表名&gt; [( &lt;字段名&gt;[,..&lt;字段名n &gt; ])] values ( 值 )[, ( 值n )]\n例如，往表 MyClass中插入二条记录, 这二条记录表示：编号为的名为Tom的成绩为.45, 编号为 的名为Joan 的成绩为.99，编号为 的名为Wang 的成绩为.5.\nmysql&gt; insert into MyClass values(1,’Tom’,96.45),(2,’Joan’,82.99), (2,’Wang’, 96.59);\n5、查询表中的数据\n1)、查询所有行\n命令：select &lt;字段，字段，...&gt; from &lt; 表名 &gt; where &lt; 表达式 &gt;\n例如：查看表 MyClass 中所有数据\nmysql&gt; select * from MyClass;\n2）、查询前几行数据\n例如：查看表 MyClass 中前行数据\nmysql&gt; select * from MyClass order by id limit 0,2;\n或者：\nmysql&gt; select * from MyClass limit 0,2;\n6、删除表中数据\n命令：delete from 表名 where 表达式\n例如：删除表 MyClass中编号为 的记录\nmysql&gt; delete from MyClass where id=1;\n7、修改表中数据：update 表名 set 字段=新值,…where 条件\nmysql&gt; update MyClass set name=’Mary’where id=1;\n7、在表中增加字段：\n命令：alter table 表名 add字段 类型 其他;\n例如：在表MyClass中添加了一个字段passtest，类型为int(4)，默认值为\nmysql&gt; alter table MyClass add passtest int(4) default ’′\n8、更改表名：\n命令：rename table 原表名 to 新表名;\n例如：在表MyClass名字更改为YouClass\nmysql&gt; rename table MyClass to YouClass;\n更新字段内容\nupdate 表名 set 字段名 = 新内容\nupdate 表名 set 字段名 = replace(字段名,’旧内容’,&#39;新内容’)\n文章前面加入个空格\nupdate article set content=concat(‘　　’,content);\n字段类型\n1．INT[(M)] 型：正常大小整数类型\n2．DOUBLE[(M,D)] [ZEROFILL] 型：正常大小(双精密)浮点数字类型\n3．DATE 日期类型：支持的范围是-01-01到-12-31。MySQL以YYYY-MM-DD格式来显示DATE值，但是允许你使用字符串或数字把值赋给DATE列\n4．CHAR(M) 型：定长字符串类型，当存储时，总是是用空格填满右边到指定的长度\n5．BLOB TEXT类型，最大长度为(2^16-1)个字符。\n6．VARCHAR型：变长字符串类型\n5.导入数据库表\n　　（）创建.sql文件\n　　（）先产生一个库如auction.c:mysqlbin&gt;mysqladmin -u root -p creat auction，会提示输入密码，然后成功创建。\n　　（）导入auction.sql文件\n　　c:mysqlbin&gt;mysql -u root -p auction &lt; auction.sql。\n　　通过以上操作，就可以创建了一个数据库auction以及其中的一个表auction。\n　　6．修改数据库\n　　（）在mysql的表中增加字段：\n　　alter table dbname add column userid int(11) not null primary key auto_increment;\n　　这样，就在表dbname中添加了一个字段userid，类型为int(11)。\n　　7．mysql数据库的授权\n　　mysql&gt;grant select,insert,delete,create,drop\n　　on *.* (或test.*/user.*/..)\n　　to 用户名@localhost\n　　identified by ‘密码’；\n　　如：新建一个用户帐号以便可以访问数据库，需要进行如下操作：\n　　mysql&gt; grant usage\n　　-&gt; ON test.*\n　　-&gt; TO testuser@localhost;\n　　Query OK, 0 rows affected (0.15 sec)\n　　此后就创建了一个新用户叫：testuser，这个用户只能从localhost连接到数据库并可以连接到test 数据库。下一步，我们必须指定testuser这个用户可以执行哪些操作：\n　　mysql&gt; GRANT select, insert, delete,update\n　　-&gt; ON test.*\n　　-&gt; TO testuser@localhost;\n　　Query OK, 0 rows affected (0.00 sec)\n　　此操作使testuser能够在每一个test数据库中的表执行SELECT，INSERT和DELETE以及UPDATE查询操作。现在我们结束操作并退出MySQL客户程序：\n　　mysql&gt; exit\n　　Bye9!\n1:使用SHOW语句找出在服务器上当前存在什么数据库：\nmysql&gt; SHOW DATABASES;\n2:2、创建一个数据库MYSQLDATA\nmysql&gt; Create DATABASE MYSQLDATA;\n3:选择你所创建的数据库\nmysql&gt; USE MYSQLDATA; (按回车键出现Database changed 时说明操作成功！)\n4:查看现在的数据库中存在什么表\nmysql&gt; SHOW TABLES;\n5:创建一个数据库表\nmysql&gt; Create TABLE MYTABLE (name VARCHAR(20), sex CHAR(1));\n6:显示表的结构：\nmysql&gt; DESCRIBE MYTABLE;\n7:往表中加入记录\nmysql&gt; insert into MYTABLE values (“hyq”,”M”);\n8:用文本方式将数据装入数据库表中（例如D:/mysql.txt）\nmysql&gt; LOAD DATA LOCAL INFILE “D:/mysql.txt”INTO TABLE MYTABLE;\n9:导入.sql文件命令（例如D:/mysql.sql）\nmysql&gt;use database;\nmysql&gt;source d:/mysql.sql;\n10:删除表\nmysql&gt;drop TABLE MYTABLE;\n11:清空表\nmysql&gt;delete from MYTABLE;\n12:更新表中数据\nmysql&gt;update MYTABLE set sex=”f”where name=’hyq’;\n以下是无意中在网络看到的使用MySql的管理心得,\n在windows中MySql以服务形式存在，在使用前应确保此服务已经启动，未启动可用net start mysql命令启动。而Linux中启动时可用“/etc/rc.d/init.d/mysqld start”命令，注意启动者应具有管理员权限。\n刚安装好的MySql包含一个含空密码的root帐户和一个匿名帐户，这是很大的安全隐患，对于一些重要的应用我们应将安全性尽可能提高，在这里应把匿名帐户删除、root帐户设置密码，可用如下命令进行：\nuse mysql;\ndelete from User where User=”&quot;;\nupdate User set Password=PASSWORD(‘newpassword’) where User=’root’;\n如果要对用户所用的登录终端进行限制，可以更新User表中相应用户的Host字段，在进行了以上更改后应重新启动数据库服务，此时登录时可用如下类似命令：\nmysql -uroot -p;\nmysql -uroot -pnewpassword;\nmysql mydb -uroot -p;\nmysql mydb -uroot -pnewpassword;\n上面命令参数是常用参数的一部分，详细情况可参考文档。此处的mydb是要登录的数据库的名称。\n在进行开发和实际应用中，用户不应该只用root用户进行连接数据库，虽然使用root用户进行测试时很方便，但会给系统带来重大安全隐患，也不利于管理技术的提高。我们给一个应用中使用的用户赋予最恰当的数据库权限。如一个只进行数据插入的用户不应赋予其删除数据的权限。MySql的用户管理是通过User表来实现的，添加新用户常用的方法有两个，一是在User表插入相应的数据行，同时设置相应的权限；二是通过GRANT命令创建具有某种权限的用户。其中GRANT的常用用法如下：\ngrant all on mydb.* to NewUserName@HostName identified by “password”;\ngrant usage on *.* to NewUserName@HostName identified by “password”;\ngrant select,insert,update on mydb.* to NewUserName@HostName identified by “password”;\ngrant update,delete on mydb.TestTable to NewUserName@HostName identified by “password”;\n若要给此用户赋予他在相应对象上的权限的管理能力，可在GRANT后面添加WITH GRANT OPTION选项。而对于用插入User表添加的用户，Password字段应用PASSWORD 函数进行更新加密，以防不轨之人窃看密码。对于那些已经不用的用户应给予清除，权限过界的用户应及时回收权限，回收权限可以通过更新User表相应字段，也可以使用REVOKE操作。\n下面给出本人从其它资料(www.cn-java.com)获得的对常用权限的解释：\n全局管理权限：\nFILE: 在MySQL服务器上读写文件。\nPROCESS: 显示或杀死属于其它用户的服务线程。\nRELOAD: 重载访问控制表，刷新日志等。\nSHUTDOWN: 关闭MySQL服务。\n数据库/数据表/数据列权限：\nAlter: 修改已存在的数据表(例如增加/删除列)和索引。\nCreate: 建立新的数据库或数据表。\nDelete: 删除表的记录。\nDrop: 删除数据表或数据库。\nINDEX: 建立或删除索引。\nInsert: 增加表的记录。\nSelect: 显示/搜索表的记录。\nUpdate: 修改表中已存在的记录。\n特别的权限：\nALL: 允许做任何事(和root一样)。\nUSAGE: 只允许登录–其它什么也不允许做。\n———————\nMYSQL常用命令\n有很多朋友虽然安装好了mysql但却不知如何使用它。在这篇文章中我们就从连接MYSQL、修改密码、增加用户等方面来学习一些MYSQL的常用命令。\n　　有很多朋友虽然安装好了mysql但却不知如何使用它。在这篇文章中我们就从连接MYSQL、修改密码、增加用户等方面来学习一些MYSQL的常用命令。　\n　　一、连接MYSQL　\n　　格式：mysql -h主机地址-u用户名－p用户密码　　\n　　、例：连接到本机上的MYSQL\n　　首先在打开DOS窗口，然后进入目录mysqlbin，再键入命令mysql -uroot -p，回车后提示你输密码，如果刚安装好MYSQL，超级用户root是没有密码的，故直接回车即可进入到MYSQL中了，MYSQL的提示符是：mysql&gt; 　　\n　　、例：连接到远程主机上的MYSQL\n　　假设远程主机的IP为：.110.110.110，用户名为root,密码为abcd123。则键入以下命令：　　　\n　　mysql -h110.110.110.110 -uroot -pabcd123 　　\n　　（注:u与root可以不用加空格，其它也一样）　　\n　　、退出MYSQL命令：exit （回车）\n　　二、修改密码　　\n　　格式：mysqladmin -u用户名-p旧密码password 新密码　\n　　、例：给root加个密码ab12。首先在DOS下进入目录mysqlbin，然后键入以下命令　　\n　　mysqladmin -uroot -password ab12 　　\n　　注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。　　\n　　、例：再将root的密码改为djg345\n　　mysqladmin -uroot -pab12 password djg345\nMYSQL常用命令（下）\n　　一、操作技巧\n　　、如果你打命令时，回车后发现忘记加分号，你无须重打一遍命令，只要打个分号回车就可以了。也就是说你可以把一个完整的命令分成几行来打，完后用分号作结束标志就OK。\n　　、你可以使用光标上下键调出以前的命令。但以前我用过的一个MYSQL旧版本不支持。我现在用的是mysql-3.23.27-beta-win。\n　　二、显示命令\n　　、显示数据库列表。\n　　show databases;\n　　刚开始时才两个数据库：mysql和test。mysql库很重要它里面有MYSQL的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。\n　　、显示库中的数据表：\n　　use mysql；／／打开库，学过FOXBASE的一定不会陌生吧\n　　show tables;\n　　、显示数据表的结构：\n　　describe 表名;\n　　、建库：\n　　create database 库名;\n　　、建表：\n　　use 库名；\n　　create table 表名(字段设定列表)；\n　　、删库和删表:\n　　drop database 库名;\n　　drop table 表名；\n　　、将表中记录清空：\n　　delete from 表名;\n　　、显示表中的记录：\n　　select * from 表名;\n三、一个建库和建表以及插入数据的实例\n　　drop database if exists school; //如果存在SCHOOL则删除\n　　create database school; //建立库SCHOOL\n　　use school; //打开库SCHOOL\n　　create table teacher //建立表TEACHER\n　　(\n　　id int(3) auto_increment not null primary key,\n　　name char(10) not null,\n　　address varchar(50) default ‘深圳’,\n　　year date\n　　); //建表结束\n　　//以下为插入字段\n　　insert into teacher values(”,’glchengang’,&#39;深圳一中’,’-10-10′);\n　　insert into teacher values(”,’jack’,&#39;深圳一中’,’-12-23′);\n　　注：在建表中（）将ID设为长度为的数字字段:int(3)并让它每个记录自动加一:auto_increment并不能为空:not null而且让他成为主字段primary key\n　　（）将NAME设为长度为的字符字段\n　　（）将ADDRESS设为长度的字符字段，而且缺省值为深圳。varchar和char有什么区别呢，只有等以后的文章再说了。\n　　（）将YEAR设为日期字段。\n　　如果你在mysql提示符键入上面的命令也可以，但不方便调试。你可以将以上命令原样写入一个文本文件中假设为school.sql，然后复制到c:\\下，并在DOS状态进入目录\\mysql\\bin，然后键入以下命令：\n　　mysql -uroot -p密码&lt; c:\\school.sql\n　　如果成功，空出一行无任何显示；如有错误，会有提示。（以上命令已经调试，你只要将//的注释去掉即可使用）。\n四、将文本数据转到数据库中\n　　、文本数据应符合的格式：字段数据之间用tab键隔开，null值用\\n来代替.\n　　例：\n　　rose 深圳二中1976-10-10\n　　mike 深圳一中1975-12-23\n　　、数据传入命令load data local infile &quot;文件名&quot; into table 表名;\n　　注意：你最好将文件复制到\\mysql\\bin目录下，并且要先用use命令打表所在的库。\n五、备份数据库：（命令在DOS的\\mysql\\bin目录下执行）\n　　mysqldump --opt school&gt;school.bbb\n　　注释:将数据库school备份到school.bbb文件，school.bbb是一个文本文件，文件名任取，打开看看你会有新发现。\n一.SELECT语句的完整语法为：\nSELECT[ALL|DISTINCT|DISTINCTROW|TOP]\n&#123;*|talbe.*|[table.]field1[AS alias1][,[table.]field2[AS alias2][,…]]&#125;\nFROM tableexpression[,…][IN externaldatabase]\n[WHERE…]\n[GROUP BY…]\n[HAVING…]\n[ORDER BY…]\n[WITH OWNERACCESS OPTION]\n说明：\n用中括号([])括起来的部分表示是可选的，用大括号(&#123;&#125;)括起来的部分是表示必须从中选择其中的一个。\n1 FROM子句\nFROM 子句指定了SELECT语句中字段的来源。FROM子句后面是包含一个或多个的表达式(由逗号分开)，其中的表达式可为单一表名称、已保存的查询或由INNER JOIN、LEFT JOIN 或RIGHT JOIN 得到的复合结果。如果表或查询存储在外部数据库，在IN 子句之后指明其完整路径。\n例：下列SQL语句返回所有有定单的客户：\nSELECT OrderID,Customer.customerID\nFROM Orders Customers\nWHERE Orders.CustomerID=Customers.CustomeersID\n2 ALL、DISTINCT、DISTINCTROW、TOP谓词\n(1) ALL 返回满足SQL语句条件的所有记录。如果没有指明这个谓词，默认为ALL。\n例：SELECT ALL FirstName,LastName\nFROM Employees\n(2) DISTINCT 如果有多个记录的选择字段的数据相同，只返回一个。\n(3) DISTINCTROW 如果有重复的记录，只返回一个\n(4) TOP显示查询头尾若干记录。也可返回记录的百分比，这是要用TOP N PERCENT子句（其中N 表示百分比）\n例：返回%定货额最大的定单\nSELECT TOP 5 PERCENT*\nFROM [ Order Details]\nORDER BY UnitPrice*Quantity*(1-Discount) DESC\n3 用AS 子句为字段取别名\n如果想为返回的列取一个新的标题，或者，经过对字段的计算或总结之后，产生了一个新的值，希望把它放到一个新的列里显示，则用AS保留。\n例：返回FirstName字段取别名为NickName\nSELECT FirstName AS NickName ,LastName ,City\nFROM Employees\n例：返回新的一列显示库存价值\nSELECT ProductName ,UnitPrice ,UnitsInStock ,UnitPrice*UnitsInStock AS valueInStock\nFROM Products\n二.WHERE 子句指定查询条件\n1 比较运算符\n比较运算符含义\n= 等于\n&gt; 大于\n&lt; 小于\n&gt;= 大于等于\n&lt;= 小于等于\n&lt;&gt; 不等于\n!&gt; 不大于\n!&lt; 不小于\n例：返回年月的定单\nSELECT OrderID, CustomerID, OrderDate\nFROM Orders\nWHERE OrderDate&gt;#1/1/96# AND OrderDate&lt;#1/30/96#\n注意：\nMcirosoft JET SQL 中，日期用‘#’定界。日期也可以用Datevalue()函数来代替。在比较字符型的数据时，要加上单引号’’，尾空格在比较中被忽略。\n例：\nWHERE OrderDate&gt;#96-1-1#\n也可以表示为：\nWHERE OrderDate&gt;Datevalue(‘/1/96’)\n使用NOT 表达式求反。\n例：查看年月日以后的定单\nWHERE Not OrderDate&lt;=#1/1/96#\n2 范围（BETWEEN 和NOT BETWEEN）\nBETWEEN …AND…运算符指定了要搜索的一个闭区间。\n例：返回年月到年月的定单。\nWHERE OrderDate Between #1/1/96# And #2/1/96#\n3 列表（IN ，NOT IN）\nIN 运算符用来匹配列表中的任何一个值。IN子句可以代替用OR子句连接的一连串的条件。\n例：要找出住在London、Paris或Berlin的所有客户\nSELECT CustomerID, CompanyName, ContactName, City\nFROM Customers\nWHERE City In(‘London’,’Paris’,’Berlin’)\n4 模式匹配(LIKE)\nLIKE运算符检验一个包含字符串数据的字段值是否匹配一指定模式。\nLIKE运算符里使用的通配符\n通配符含义\n？任何一个单一的字符\n* 任意长度的字符\n# 0~9之间的单一数字\n[字符列表] 在字符列表里的任一值\n[！字符列表] 不在字符列表里的任一值\n- 指定字符范围，两边的值分别为其上下限\n例：返回邮政编码在（）-0000到（）-9999之间的客户\nSELECT CustomerID ,CompanyName,City,Phone\nFROM Customers\nWHERE Phone Like ‘(171)555-####’\nLIKE运算符的一些样式及含义\n样式含义不符合\nLIKE ‘A*’A后跟任意长度的字符Bc,c255\nLIKE’[*]’5*5 555\nLIKE’?5’5与之间有任意一个字符55,5wer5\nLIKE’##5’5235，5kd5,5346\nLIKE’[a-z]’a-z间的任意一个字符5,%\nLIKE’[!0-9]’非-9间的任意一个字符0,1\nLIKE’[[]’1,*\n三.用ORDER BY子句排序结果\nORDER子句按一个或多个（最多个）字段排序查询结果，可以是升序（ASC）也可以是降序（DESC），缺省是升序。ORDER子句通常放在SQL语句的最后。\nORDER子句中定义了多个字段，则按照字段的先后顺序排序。\n例：\nSELECT ProductName,UnitPrice, UnitInStock\nFROM Products\nORDER BY UnitInStock DESC , UnitPrice DESC, ProductName\nORDER BY 子句中可以用字段在选择列表中的位置号代替字段名，可以混合字段名和位置号。\n例：下面的语句产生与上列相同的效果。\nSELECT ProductName,UnitPrice, UnitInStock\nFROM Products\nORDER BY 1 DESC , 2 DESC,3\n四.运用连接关系实现多表查询\n例：找出同一个城市中供应商和客户的名字\nSELECT Customers.CompanyName, Suppliers.ComPany.Name\nFROM Customers, Suppliers\nWHERE Customers.City=Suppliers.City\n例：找出产品库存量大于同一种产品的定单的数量的产品和定单\nSELECT ProductName,OrderID, UnitInStock, Quantity\nFROM Products, [Order Deails]\nWHERE Product.productID=[Order Details].ProductID\nAND UnitsInStock&gt;Quantity\n另一种方法是用Microsof JET SQL 独有的JNNER JOIN\n语法：\nFROM table1 INNER JOIN table2\nON table1.field1 comparision table2.field2\n其中comparision 就是前面WHERE子句用到的比较运算符。\nSELECT FirstName,lastName,OrderID,CustomerID,OrderDate\nFROM Employees\nINNER JOIN Orders ON Employees.EmployeeID=Orders.EmployeeID\n注意：\nINNER JOIN不能连接Memo OLE Object Single Double 数据类型字段。\n在一个JOIN语句中连接多个ON子句\n语法：\nSELECT fields\nFROM table1 INNER JOIN table2\nON table1.field1 compopr table2.field1 AND\nON table1.field2 compopr table2.field2 OR\nON table1.field3 compopr table2.field3\n也可以\nSELECT fields\nFROM table1 INNER JOIN\n（table2 INNER JOIN [( ]table3\n[INNER JOER] [( ]tablex[INNER JOIN]\nON table1.field1 compopr table2.field1\nON table1.field2 compopr table2.field2\nON table1.field3 compopr table2.field3\n外部连接返回更多记录，在结果中保留不匹配的记录，不管存不存在满足条件的记录都要返回另一侧的所有记录。\nFROM table [LEFT|RIGHT]JOIN table2\nON table1.field1comparision table.field2\n用左连接来建立外部连接，在表达式的左边的表会显示其所有的数据\n例：不管有没有定货量，返回所有商品\nSELECT ProductName ,OrderID\nFROM Products\nLEFT JOIN Orders ON Products.PrductsID=Orders.ProductID\n右连接与左连接的差别在于：不管左侧表里有没有匹配的记录，它都从左侧表中返回所有记录。\n例：如果想了解客户的信息，并统计各个地区的客户分布，这时可以用一个右连接，即使某个地区没有客户，也要返回客户信息。\n空值不会相互匹配，可以通过外连接才能测试被连接的某个表的字段是否有空值。\nSELECT *\nFROM talbe1\nLEFT JOIN table2 ON table1.a=table2.c\n1 连接查询中使用Iif函数实现以值显示空值\nIif表达式：Iif(IsNull(Amount,0,Amout)\n例：无论定货大于或小于￥，都要返回一个标志。\nIif([Amount]&gt;50,?Big order?,?Small order?)\n五. 分组和总结查询结果\n在SQL的语法里，GROUP BY和HAVING子句用来对数据进行汇总。GROUP BY子句指明了按照哪几个字段来分组，而将记录分组后，用HAVING子句过滤这些记录。\nGROUP BY 子句的语法\nSELECT fidldlist\nFROM table\nWHERE criteria\n[GROUP BY groupfieldlist [HAVING groupcriteria]]\n注：Microsoft Jet数据库Jet 不能对备注或OLE对象字段分组。\nGROUP BY字段中的Null值以备分组但是不能被省略。\n在任何SQL合计函数中不计算Null值。\nGROUP BY子句后最多可以带有十个字段，排序优先级按从左到右的顺序排列。\n例：在‘WA’地区的雇员表中按头衔分组后，找出具有同等头衔的雇员数目大于人的所有头衔。\nSELECT Title ,Count(Title) as Total\nFROM Employees\nWHERE Region = ‘WA’\nGROUP BY Title\nHAVING Count(Title)&gt;1\nJET SQL 中的聚积函数\n聚集函数意义\nSUM ( ) 求和\nAVG ( ) 平均值\nCOUNT ( ) 表达式中记录的数目\nCOUNT (* ) 计算记录的数目\nMAX 最大值\nMIN 最小值\nVAR 方差\nSTDEV 标准误差\nFIRST 第一个值\nLAST 最后一个值\n六. 用Parameters声明创建参数查询\nParameters声明的语法:\nPARAMETERS name datatype[,name datatype[, …]]\n其中name 是参数的标志符,可以通过标志符引用参数.\nDatatype说明参数的数据类型.\n使用时要把PARAMETERS 声明置于任何其他语句之前.\n例:\nPARAMETERS[Low price] Currency,[Beginning date]datatime\nSELECT OrderID ,OrderAmount\nFROM Orders\nWHERE OrderAMount&gt;[low price]\nAND OrderDate&gt;=[Beginning date]\n七. 功能查询\n所谓功能查询,实际上是一种操作查询,它可以对数据库进行快速高效的操作.它以选择查询为目的,挑选出符合条件的数据,再对数据进行批处理.功能查询包括更新查询,删除查询,添加查询,和生成表查询.\n1 更新查询\nUPDATE子句可以同时更改一个或多个表中的数据.它也可以同时更改多个字段的值.\n更新查询语法:\nUPDATE 表名\nSET 新值\nWHERE 准则\n例:英国客户的定货量增加%,货运量增加%\nUPDATE OEDERS\nSET OrderAmount = OrderAmount *1.1\nFreight = Freight*1.03\nWHERE ShipCountry = ‘UK’\n2 删除查询\nDELETE子句可以使用户删除大量的过时的或冗于的数据.\n注:删除查询的对象是整个记录.\nDELETE子句的语法:\nDELETE [表名.*]\nFROM 来源表\nWHERE 准则\n例: 要删除所有年前的定单\nDELETE *\nFROM Orders\nWHERE OrderData&lt;#94-1-1#\n3 追加查询\nINSERT子句可以将一个或一组记录追加到一个或多个表的尾部.\nINTO 子句指定接受新记录的表\nvalueS 关键字指定新记录所包含的数据值.\nINSERT 子句的语法:\nINSETR INTO 目的表或查询(字段,字段,…)\nvalueS(数值,数值,…)\n例:增加一个客户\nINSERT INTO Employees(FirstName,LastName,title)\nvalueS(‘Harry’,’Washington’,’Trainee’)\n4 生成表查询\n可以一次性地把所有满足条件的记录拷贝到一张新表中.通常制作记录的备份或副本或作为报表的基础.\nSELECT INTO子句用来创建生成表查询语法:\nSELECT 字段,字段,…\nINTO 新表[IN 外部数据库]\nFROM 来源数据库\nWHERE 准则\n例:为定单制作一个存档备份\nSELECT *\nINTO OrdersArchive\nFROM Orders\n八. 联合查询\nUNION运算可以把多个查询的结果合并到一个结果集里显示.\nUNION运算的一般语法:\n[表]查询UNION [ALL]查询UNION …\n例:返回巴西所有供给商和客户的名字和城市\nSELECT CompanyName,City\nFROM Suppliers\nWHERE Country = ‘Brazil’\nUNION\nSELECT CompanyName,City\nFROM Customers\nWHERE Country = ‘Brazil’\n注:\n缺省的情况下,UNION子句不返回重复的记录.如果想显示所有记录,可以加ALL选项\nUNION运算要求查询具有相同数目的字段.但是,字段数据类型不必相同.\n每一个查询参数中可以使用GROUP BY 子句或HAVING 子句进行分组.要想以指定的顺序来显示返回的数据,可以在最后一个查询的尾部使用OREER BY子句.\n九. 交叉查询\n交叉查询可以对数据进行总和,平均,计数或其他总和计算法的计算,这些数据通过两种信息进行分组:一个显示在表的左部,另一个显示在表的顶部.\nMicrosoft Jet SQL 用TRANSFROM语句创建交叉表查询语法:\nTRANSFORM aggfunction\nSELECT 语句\nGROUP BY 子句\nPIVOT pivotfield[IN(value1 [,value2[,…]]) ]\nAggfounction指SQL聚积函数,\nSELECT语句选择作为标题的的字段,\nGROUP BY 分组\n说明：\nPivotfield 在查询结果集中创建列标题时用的字段或表达式,用可选的IN子句限制它的取值.\nvalue代表创建列标题的固定值.\n例:显示在年里每一季度每一位员工所接的定单的数目:\nTRANSFORM Count(OrderID)\nSELECT FirstName&amp;’’&amp;LastName AS FullName\nFROM Employees INNER JOIN Orders\nON Employees.EmployeeID = Orders.EmployeeID\nWHERE DatePart(“yyyy”,OrderDate)= ‘’\nGROUP BY FirstName&amp;’’&amp;LastName\nORDER BY FirstName&amp;’’&amp;LastName\nPOVOT DatePart(“q”,OrderDate)&amp;’季度’\n十.子查询\n子查询可以理解为套查询.子查询是一个SELECT语句.\n1 表达式的值与子查询返回的单一值做比较\n语法:\n表达式comparision [ANY|ALL|SOME](子查询)\n说明：\nANY 和SOME谓词是同义词,与比较运算符(=,&lt;,&gt;,&lt;&gt;,&lt;=,&gt;=)一起使用.返回一个布尔值True或False.ANY的意思是,表达式与子查询返回的一系列的值逐一比较,只要其中的一次比较产生True结果,ANY测试的返回True值(既WHERE子句的结果),对应于该表达式的当前记录将进入主查询的结果中.ALL测试则要求表达式与子查询返回的一系列的值的比较都产生True结果,才回返回True值.\n例:主查询返回单价比任何一个折扣大于等于%的产品的单价要高的所有产品\nSELECT * FROM Products\nWHERE UnitPrice&gt;ANY\n(SELECT UnitPrice FROM[Order Details] WHERE Discount&gt;0.25)\n2 检查表达式的值是否匹配子查询返回的一组值的某个值\n语法:\n[NOT]IN(子查询)\n例:返回库存价值大于等于的产品.\nSELECT ProductName FROM Products\nWHERE ProductID IN\n(SELECT PrdoctID FROM [Order DEtails]\nWHERE UnitPrice*Quantity&gt;= 1000)\n3检测子查询是否返回任何记录\n语法:\n[NOT]EXISTS (子查询)\n例:用EXISTS检索英国的客户\nSELECT ComPanyName,ContactName\nFROM Orders\nWHERE EXISTS\n(SELECT *\nFROM Customers\nWHERE Country = ‘UK’AND\nCustomers.CustomerID= Orders.CustomerID)</code></pre>\n","excerpt":"MYSQL常用命令大杂烩","categories":[{"name":"Notes","slug":"Notes","permalink":"http://uiuing.top/categories/Notes/"}],"tags":[{"name":"Mysql","slug":"Mysql","permalink":"http://uiuing.top/tags/Mysql/"}]},{"title":"记录：我大学生活中的第一个开源项目","date":"2020-11-22T16:00:00.000Z","path":"2020/11/23/My_first_open_source /","content":"<blockquote>\n<p>万行代码，开源仓库！</p>\n</blockquote>\n<p><strong>作者：uiuing</strong></p>\n<p><strong>项目名：Uiu’s blog</strong><br><code>建立目的在于 记录、学习、分享、解惑</code></p>\n<a id=\"more\"></a>\n<p><strong>属性：</strong><br><code>开源</code></p>\n<p><strong>开源仓库：</strong><br><code>https://github.com/uiuing/uiuing.github.io</code><a href=\"https://github.com/uiuing/uiuing.github.io\" title=\"Go！\">Go！</a></p>\n<p><strong>展示参考:</strong><br><code>http://uiuing.top/ </code><a href=\"http://uiuing.top/\" title=\"Go!\">Go!</a></p>\n<p><strong>项目代码工程量：</strong><br><img src=\"/images/JT1.PNG\" alt=\"enter image description here\"></p>\n<p><br></br></p>\n<p>此处特别感谢：Litten</p>\n","excerpt":"万行代码，开源仓库！ 作者：uiuing 项目名：Uiu’s blog建立目的在于 记录、学习、分享、解惑","categories":[{"name":"Whimsical","slug":"Whimsical","permalink":"http://uiuing.top/categories/Whimsical/"}],"tags":[{"name":"Html","slug":"Html","permalink":"http://uiuing.top/tags/Html/"},{"name":"Javascript","slug":"Javascript","permalink":"http://uiuing.top/tags/Javascript/"},{"name":"CSS","slug":"CSS","permalink":"http://uiuing.top/tags/CSS/"},{"name":"XML","slug":"XML","permalink":"http://uiuing.top/tags/XML/"}]},{"title":"Javascript：加密网页 & 代码加密","date":"2020-10-23T16:00:00.000Z","path":"2020/10/24/javascript_Code_encryption/","content":"<h4 id=\"功能实现：\"><a href=\"#功能实现：\" class=\"headerlink\" title=\"功能实现：\"></a>功能实现：</h4><p><strong>1. Javascript加密网页</strong><br><strong>2. 加密算法加密Javascript代码</strong></p>\n<p></p>\n<a id=\"more\"></a>\n\n<h4 id=\"功能需求：\"><a href=\"#功能需求：\" class=\"headerlink\" title=\"功能需求：\"></a>功能需求：</h4><p><strong>1. 代码实现</strong><br><strong>2. 加密算法</strong></p>\n<p><strong>实现语言：Javascript</strong></p>\n<p></p>\n\n<p><strong>Javascript代码:</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//实现方法：嵌入</span></span><br><span class=\"line\"><span class=\"comment\">//&lt;script type=&quot;text/javascript&quot;&gt;    //请自行删除注释</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">password</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> Inpass = prompt(<span class=\"string\">&#x27;该项目展示需要密码\\n请输入密码&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ( i &lt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!Inpass)&#123;</span><br><span class=\"line\">            history.go(-<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Inpass == <span class=\"string\">&quot;123&quot;</span>) &#123;       <span class=\"comment\">//默认密码</span></span><br><span class=\"line\">            alert(<span class=\"string\">&#x27;密码正确！&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i+=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> Inpass = prompt(<span class=\"string\">&#x27;密码错误！请重新输入！&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.write(password());</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>如果没有写加密算法的能力来加密代码怎么办？</p>\n<p>但是早已有大神为大家提提供了解决办法：<a href=\"https://www.sojson.com/\">https://www.sojson.com/</a></p>\n<p><strong>范例：</strong></p>\n<pre><code>&lt;script type=&quot;text/javascript&quot;&gt;\n ;var encode_version = &#39;jsjiami.com.v5&#39;, vhxuy = &#39;__0xa5815&#39;,  __0xa5815=[&#39;w7c0wrA0VA==&#39;,&#39;GsOew4TDi8O7wrNIwppi&#39;,&#39;eQzDsTQd&#39;,&#39;LFA5w4fCow==&#39;,&#39;wqTChcO6w6HDpg==&#39;,&#39;wojDssKo&#39;,&#39;V8KUAsKzdg==&#39;,&#39;AxxvQcK6&#39;,&#39;dcKrVxfDtA==&#39;,&#39;6Ky+6aK655if5bCb56aT6ZyX6KS05a+e56O1wrforqTovLvlhIjlr6PnoLs=&#39;,&#39;woTDlMKEe8OO&#39;,&#39;DUQlw7/Cug==&#39;,&#39;ZMOfwrYdwrQ=&#39;,&#39;5a6u56OS5q6256Cw772Y&#39;,&#39;T8KQG8KiTg==&#39;,&#39;5a+356K86ZaQ6K+377+L6K226YSD5pa56L+A5Yac776k&#39;,&#39;Lk3CtQ==&#39;,&#39;w4QLwo4TbcOIwowodMKcwqkOw7pC&#39;,&#39;5Yuo6ZuI54mJ5p625Y6i776Vw5vCm+S+o+WuouacueW/veeqlw==&#39;,&#39;MEBoeWs=&#39;];\n (function(_0x3f3f67,_0x336eff)&#123;var _0x5eced1=function(_0x500baf)&#123;while(--_0x500baf)&#123;_0x3f3f67[&#39;push&#39;](_0x3f3f67[&#39;shift&#39;]());&#125;&#125;;_0x5eced1(++_0x336eff);&#125;(__0xa5815,0x134));\n var _0x23b9=function(_0x5875cb,_0x496b59)&#123;_0x5875cb=_0x5875cb-0x0;var _0xfd482b=__0xa5815[_0x5875cb];if(_0x23b9[&#39;initialized&#39;]===undefined)&#123;(function()&#123;var _0x42ebff=typeof window!==&#39;undefined&#39;?window:typeof process===&#39;object&#39;&amp;&amp;typeof require===&#39;function&#39;&amp;&amp;typeof global===&#39;object&#39;?global:this;\n var _0x299a9b=&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#39;;_0x42ebff[&#39;atob&#39;]||(_0x42ebff[&#39;atob&#39;]=function(_0xa82a4c)&#123;var _0x16a668=String(_0xa82a4c)[&#39;replace&#39;](/=+$/,&#39;&#39;);for(var _0x402b57=0x0,_0x592cfa,_0x5e7d75,_0x1f6f4c=0x0,_0x32321e=&#39;&#39;;\n _0x5e7d75=_0x16a668[&#39;charAt&#39;](_0x1f6f4c++);~_0x5e7d75&amp;&amp;(_0x592cfa=_0x402b57%0x4?_0x592cfa*0x40+_0x5e7d75:_0x5e7d75,_0x402b57++%0x4)?_0x32321e+=String[&#39;fromCharCode&#39;](0xff&amp;_0x592cfa&gt;&gt;(-0x2*_0x402b57&amp;0x6)):0x0)&#123;_0x5e7d75=_0x299a9b[&#39;indexOf&#39;](_0x5e7d75);&#125;return _0x32321e;&#125;);&#125;());\n var _0x2efeb8=function(_0x716e50,_0x269efe)&#123;var _0x2a2af3=[],_0x40715c=0x0,_0x27e35b,_0x20761c=&#39;&#39;,_0x2122c5=&#39;&#39;;_0x716e50=atob(_0x716e50);for(var _0x4811ba=0x0,_0x3da859=_0x716e50[&#39;length&#39;];_0x4811ba&lt;_0x3da859;_0x4811ba++)&#123;_0x2122c5+=&#39;%&#39;+(&#39;00&#39;+_0x716e50[&#39;charCodeAt&#39;](_0x4811ba)[&#39;toString&#39;](0x10))[&#39;slice&#39;](-0x2);&#125;_0x716e50=decodeURIComponent(_0x2122c5);\n for(var _0x20ca04=0x0;_0x20ca04&lt;0x100;_0x20ca04++)&#123;_0x2a2af3[_0x20ca04]=_0x20ca04;&#125;for(_0x20ca04=0x0;_0x20ca04&lt;0x100;_0x20ca04++)&#123;_0x40715c=(_0x40715c+_0x2a2af3[_0x20ca04]+_0x269efe[&#39;charCodeAt&#39;](_0x20ca04%_0x269efe[&#39;length&#39;]))%0x100;_0x27e35b=_0x2a2af3[_0x20ca04];_0x2a2af3[_0x20ca04]=_0x2a2af3[_0x40715c];_0x2a2af3[_0x40715c]=_0x27e35b;&#125;_0x20ca04=0x0;\n _0x40715c=0x0;for(var _0x202f13=0x0;_0x202f13&lt;_0x716e50[&#39;length&#39;];_0x202f13++)&#123;_0x20ca04=(_0x20ca04+0x1)%0x100;_0x40715c=(_0x40715c+_0x2a2af3[_0x20ca04])%0x100;_0x27e35b=_0x2a2af3[_0x20ca04];_0x2a2af3[_0x20ca04]=_0x2a2af3[_0x40715c];_0x2a2af3[_0x40715c]=_0x27e35b;_0x20761c+=String[&#39;fromCharCode&#39;](_0x716e50[&#39;charCodeAt&#39;](_0x202f13)^_0x2a2af3[(_0x2a2af3[_0x20ca04]+_0x2a2af3[_0x40715c])%0x100]);&#125;return _0x20761c;&#125;;\n _0x23b9[&#39;rc4&#39;]=_0x2efeb8;_0x23b9[&#39;data&#39;]=&#123;&#125;;_0x23b9[&#39;initialized&#39;]=!![];&#125;var _0x38ee78=_0x23b9[&#39;data&#39;][_0x5875cb];if(_0x38ee78===undefined)&#123;if(_0x23b9[&#39;once&#39;]===undefined)&#123;_0x23b9[&#39;once&#39;]=!![];&#125;_0xfd482b=_0x23b9[&#39;rc4&#39;](_0xfd482b,_0x496b59);_0x23b9[&#39;data&#39;][_0x5875cb]=_0xfd482b;&#125;else&#123;_0xfd482b=_0x38ee78;&#125;return _0xfd482b;&#125;;\n function password()&#123;var _0x399538=&#123;&#39;JgSmL&#39;:function _0x5e949d(_0xbf55ae,_0x1db3ec,_0x5d4116)&#123;return _0xbf55ae(_0x1db3ec,_0x5d4116);&#125;,&#39;OHBFS&#39;:function _0x32c370(_0x31036d,_0x2f913a)&#123;return _0x31036d&lt;_0x2f913a;&#125;,&#39;kaplj&#39;:&#39;123&#39;,&#39;svPch&#39;:function _0xd0db41(_0x4cac2d,_0x5d37c2)&#123;return _0x4cac2d(_0x5d37c2);&#125;&#125;;var _0x4c8f83=0x1;\n var _0x200bea=_0x399538[_0x23b9(&#39;0x0&#39;,&#39;!J)p&#39;)](prompt,_0x23b9(&#39;0x1&#39;,&#39;bv4s&#39;),&#39;&#39;);while(_0x399538[_0x23b9(&#39;0x2&#39;,&#39;Fzw9&#39;)](_0x4c8f83,0x3))&#123;if(!_0x200bea)&#123;history[&#39;go&#39;](-0x1);&#125;if(_0x200bea==_0x399538[_0x23b9(&#39;0x3&#39;,&#39;vsLB&#39;)])&#123;_0x399538[_0x23b9(&#39;0x4&#39;,&#39;qutw&#39;)](alert,_0x23b9(&#39;0x5&#39;,&#39;aCv$&#39;));break;&#125;_0x4c8f83+=0x1;var _0x200bea=_0x399538[_0x23b9(&#39;0x6&#39;,&#39;GB@L&#39;)](prompt,_0x23b9(&#39;0x7&#39;,&#39;8Ufl&#39;));&#125;return&#39;\\x20&#39;;&#125;document[&#39;write&#39;](password());;\n (function(_0x271bf4,_0x4f1065,_0x2b4606)&#123;var _0x38bc79=&#123;&#39;pQZAa&#39;:_0x23b9(&#39;0x8&#39;,&#39;#gEB&#39;),&#39;YLTNX&#39;:function _0x3496ab(_0x504dfb,_0x3f7dd8)&#123;return _0x504dfb!==_0x3f7dd8;&#125;,&#39;ZeLDh&#39;:_0x23b9(&#39;0x9&#39;,&#39;*HMN&#39;),&#39;JulTs&#39;:&#39;版本号，js会定期弹窗，还请支持我们的工作&#39;,&#39;pyGPZ&#39;:function _0x1875e9(_0x5eef57,_0x150848)&#123;return _0x5eef57===_0x150848;&#125;,&#39;krIrP&#39;:_0x23b9(&#39;0xa&#39;,&#39;!zV]&#39;)&#125;;_0x2b4606=&#39;al&#39;;try&#123;_0x2b4606+=_0x38bc79[_0x23b9(&#39;0xb&#39;,&#39;aQDj&#39;)];\n _0x4f1065=encode_version;if(!(_0x38bc79[_0x23b9(&#39;0xc&#39;,&#39;*HMN&#39;)](typeof _0x4f1065,_0x23b9(&#39;0xd&#39;,&#39;kqjg&#39;))&amp;&amp;_0x4f1065===_0x38bc79[_0x23b9(&#39;0xe&#39;,&#39;^kFJ&#39;)]))&#123;_0x271bf4[_0x2b4606](&#39;删除&#39;+_0x38bc79[_0x23b9(&#39;0xf&#39;,&#39;vsLB&#39;)]);&#125;&#125;catch(_0x1e37b6)&#123;if(_0x38bc79[_0x23b9(&#39;0x10&#39;,&#39;Go*d&#39;)](&#39;maS&#39;,_0x23b9(&#39;0x11&#39;,&#39;wK0l&#39;)))&#123;_0x271bf4[_0x2b4606](_0x38bc79[_0x23b9(&#39;0x12&#39;,&#39;GB@L&#39;)]);&#125;else&#123;_0x271bf4[_0x2b4606](_0x38bc79[_0x23b9(&#39;0x13&#39;,&#39;]3&amp;G&#39;)]);&#125;&#125;&#125;(window));;encode_version = &#39;jsjiami.com.v5&#39;;\n&lt;/script&gt;</code></pre>\n","excerpt":"功能实现：1. Javascript加密网页2. 加密算法加密Javascript代码","categories":[{"name":"Notes","slug":"Notes","permalink":"http://uiuing.top/categories/Notes/"}],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://uiuing.top/tags/Javascript/"}]},{"title":"linux：debian 的初始配置","date":"2018-07-18T16:00:00.000Z","path":"2018/07/19/LinuxAndDebian/","content":"<blockquote>\n<p>阅读该文章无需Linux基础</p>\n</blockquote>\n<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><ul>\n<li><strong>介绍Linux与Debian</strong></li>\n<li><strong>debian的初始配置</strong></li>\n<li><ul>\n<li>获取root权限</li>\n</ul>\n</li>\n<li><ul>\n<li>修改apt软件源</li>\n</ul>\n</li>\n<li><ul>\n<li>添加必备软件</li>\n</ul>\n</li>\n<li><ul>\n<li>一键配置vim</li>\n</ul>\n</li>\n</ul>\n<p> </p>\n<a id=\"more\"></a>\n\n<p><br></br></p>\n<h2 id=\"1-linux-amp-amp-debian-介绍\"><a href=\"#1-linux-amp-amp-debian-介绍\" class=\"headerlink\" title=\"1. linux &amp;&amp; debian 介绍\"></a>1. linux &amp;&amp; debian 介绍</h2><p><br></br></p>\n<p><img src=\"/images/linux.jpg\" alt=\"enter image description here\"></p>\n<pre><code>     Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。\n     它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。\n     Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</code></pre>\n<p><br></br><br><img src=\"/images/debian.jpg\" alt=\"enter image description here\"></p>\n<pre><code>    广义的Debian是指一个致力于创建自由操作系统的合作组织及其作品，由于Debian项目众多内核分支中以Linux宏内核为主，而且 Debian开发者 所创建的操作系统中绝大部分基础工具来自于GNU工程 ，因此 “Debian” 常指Debian GNU/Linux                                                                 \n    GNU简单的讲就是 GNU软件可以自由地“使用、复制、修改和发布” </code></pre>\n<p><br></br><br>linux与debian之间的关系：</p>\n<p><img src=\"/images/linux-debian.jpg\" alt=\"enter image description here\"></p>\n<p><br></br><br><br></br></p>\n<p>##2.  修改debian初始配置 ##<br><br></br></p>\n<h3 id=\"2-1获取root权限\"><a href=\"#2-1获取root权限\" class=\"headerlink\" title=\"2.1获取root权限\"></a>2.1获取root权限</h3><p> <strong><code>打开终端模拟器 然后再继续</code></strong> <strong>(&gt;v&lt;)</strong></p>\n<p> <strong>进行下面的操作首先是需要get root权限的</strong></p>\n<blockquote>\n<p>$ <code>sudo</code> + 命令</p>\n</blockquote>\n<p> 输入密码即可get root权限执行命令</p>\n<p><strong>but 为了方便 我们采用以下方式来执行命令</strong></p>\n<blockquote>\n<p>$ <code>sudo -i</code><br>输入密码即可全程操作畅通无阻了 <strong>但是root权限下操作是很危险的哦</strong></p>\n<p>$ <code>su</code> yourname<br>即可退出root权限</p>\n</blockquote>\n<p><br></br></p>\n<h3 id=\"2-2-apt软件源修改\"><a href=\"#2-2-apt软件源修改\" class=\"headerlink\" title=\"2.2 apt软件源修改\"></a>2.2 apt软件源修改</h3><p><strong>2.2.1 首先备份软件源配置文件（可选）</strong></p>\n<blockquote>\n<p>$ <code>cp  /etc/apt/sources.list     /home/</code></p>\n<p>复制/etc/apt/sources.list文件到/home/      </p>\n<blockquote>\n<p>运行 $ <code>mv -f /home  /etc/apt/</code> 即可恢复</p>\n</blockquote>\n</blockquote>\n<p><strong>2.2.2 修改软件源</strong></p>\n<blockquote>\n<p>$ <code>vi  /etc/apt/sources.list</code></p>\n</blockquote>\n<blockquote>\n<ul>\n<li><strong>删除原有配置文件 or 全部在开通加上‘#’符号注释掉</strong></li>\n<li><ul>\n<li>vi 是linux发行版本基本上都自带的文本编辑器<br>按 “<code>insert</code>“ 键 or 按 “<code>o</code>“键 进入”插入模式” 即可开始修改文本</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><strong>自己选一个软件源加进去</strong><br><a href=\"https://opsx.alibaba.com/mirror\">阿里源</a><br><a href=\"http://mirrors.163.com/\">163源</a><br><a href=\"https://mirrors.tuna.tsinghua.edu.cn/\">清华大学源</a><br><a href=\"http://mirrors.ustc.edu.cn/\">中科大源</a></p>\n<p>进入网站，点击帮助就好<br><img src=\"/images/y1.png\" alt=\"enter image description here\"><br><img src=\"/images/y2.png\" alt=\"enter image description here\"></p>\n</blockquote>\n<blockquote>\n<p><strong>将如图选择的链接复制 到刚刚vi打开的文件就好了</strong></p>\n<blockquote>\n<p><code>ctrl+c</code>复制 软件源<br><code>ctrl+shift+v</code>粘贴到vi<br><code>esc</code> -&gt; <code>:(shift+&#39;;&#39;)</code> -&gt; <code>wq!</code> 回车即可</p>\n</blockquote>\n</blockquote>\n<p><strong>2.3.3 更新</strong></p>\n<blockquote>\n<p>更新软件源</p>\n<blockquote>\n<p>$ <code>apt-get update</code></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>更新软件</p>\n<blockquote>\n<p>$ <code>apt-get upgrade</code></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>更新系统</p>\n<blockquote>\n<p>$ <code>apt-get dist-upgrade</code></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>卸载不需要的依赖</p>\n<blockquote>\n<p>$ <code>apt-get autoremove</code></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>清除掉对于的软件包</p>\n<blockquote>\n<p>$ <code>apt-get clean</code></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p><strong>其实可以一步到位  (qwq)</strong><br>$ <code>apt-get update &amp;&amp; apt-get upgrade &amp;&amp; apt-get dist-upgrade &amp;&amp; apt-get autoremove &amp;&amp; apt-get clean</code></p>\n</blockquote>\n<p><br></br></p>\n<h3 id=\"2-3-安装必备的软件\"><a href=\"#2-3-安装必备的软件\" class=\"headerlink\" title=\"2.3 安装必备的软件\"></a>2.3 安装必备的软件</h3><p>安装过程如果出现依赖问题，可以输入</p>\n<blockquote>\n<p>$ <code>apt-get -f install</code>      or 更换软件源</p>\n</blockquote>\n<p><strong>2.3.1 vim</strong></p>\n<blockquote>\n<p>安装vim        </p>\n<blockquote>\n<p>$ <code>apt-get install vim</code></p>\n<blockquote>\n<p>vim 是vi的升级版本，它不仅兼容vi的所有指令，而且还有一些新的特性在里面。      vim可是一个强大的文本编辑器哦！</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p><strong>2.3.2 中文输入法</strong></p>\n<blockquote>\n<p>通过<strong>Fcitx</strong>（小企鹅输入法）安装中文输入法</p>\n<blockquote>\n<p>安装Fcitx输入法</p>\n<blockquote>\n<p>$ <code>apt-get install fcitx</code></p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>安装中文输入法</p>\n<blockquote>\n<p>$ <code>apt-get install </code> +</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p><code>fcitx-googlepinyin</code> 谷歌拼音输入法<br><code>fcitx-module-cloudpinyin</code> 云拼音输入法模块，来自搜狗、QQ等的云输入<br><code>fcitx-pinyin</code> 拼音<br><code>fcitx-sunpinyin</code> Sunpinyin拼音输入<br><code>fcitx-rime</code> 中州韵输入法，支持简体和繁体输入<br><code>fcitx-table-wbpy</code> 五笔拼音 </p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>解决中文输入法不能用</p>\n<blockquote>\n<p>$ <code>apt-get install fcitx-ui-classic &amp;&amp; apt-get install fcitx-ui-light </code></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>$ <code>reboot</code>     重启之后才能ok</p>\n</blockquote>\n<blockquote>\n<p>通过<strong>IBus</strong>安装中文输入法</p>\n<blockquote>\n<p>安装IBus输入法</p>\n<blockquote>\n<p>$ <code>apt-get install ibus</code></p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>安装中文输入法</p>\n<blockquote>\n<p>$ <code>apt-get install </code> +</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p><code>ibus-googlepinyin</code> 谷歌拼音输入法</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p><code>ibus-pinyin</code> 拼音</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p><code>ibus-sunpinyin</code> Sunpinyin拼音输入</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p><code>ibus-rime</code> 中州韵输入法，支持简体和繁体输入</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>$ <code>reboot</code>     重启之后才能ok</p>\n</blockquote>\n<p><strong>2.3.3 wps office</strong></p>\n<blockquote>\n<p>下载<a href=\"http://community.wps.cn/download/\">wps for linux</a> deb 后缀的软件包（注意操作系统位数）</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>$ <code>uname -a</code> 查看系统位数</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>$ <code>cd</code> + 文件所下载的目录</p>\n</blockquote>\n<blockquote>\n<p>$ <code>dpkg -i </code>+ 软件包的全名 </p>\n</blockquote>\n<p><strong>2.3.4 git (有git仓库必备 其它可选)</strong></p>\n<blockquote>\n<p>$ <code>apt-get install git</code></p>\n</blockquote>\n<p><strong>2.3.5 网易云音乐</strong></p>\n<blockquote>\n<p>其实个人推荐<a href=\"https://music.163.com/\">web版的网易云音乐</a></p>\n</blockquote>\n<blockquote>\n<p>下载<a href=\"https://music.163.com/#/download\">网易云音乐 for linux</a>  ubuntu版本</p>\n</blockquote>\n<blockquote>\n<p>$ <code>cd</code> + 文件所下载的目录</p>\n</blockquote>\n<blockquote>\n<p>$ <code>dpkg -i </code>+ 软件包的全名 </p>\n</blockquote>\n<p><br></br><br>###2.4 一键配置vim<br><strong>github 上的vim的配置详细介绍：</strong><a href=\"https://github.com/ma6174/vim\">https://github.com/ma6174/vim</a></p>\n<p>一般vim的配置文件在 /etc/vim/vimrc</p>\n<p><strong>一键安装命令:</strong></p>\n<blockquote>\n<p>$ <code>wget -qO- https://raw.github.com/ma6174/vim/master/setup.sh | sh -x</code></p>\n</blockquote>\n<p>包含:</p>\n<blockquote>\n<p>F5 直接运行</p>\n</blockquote>\n<blockquote>\n<p>F8 编译c++</p>\n</blockquote>\n<blockquote>\n<p>F3 展开树状图</p>\n</blockquote>\n<blockquote>\n<p>自动缩进，代码高亮，以及联想等功能</p>\n</blockquote>\n<p><br></br></p>\n<hr>\n<p><strong>Nice!</strong></p>\n<hr>\n","excerpt":"阅读该文章无需Linux基础 目录 介绍Linux与Debian debian的初始配置 获取root权限 修改apt软件源 添加必备软件 一键配置vim","categories":[{"name":"Notes","slug":"Notes","permalink":"http://uiuing.top/categories/Notes/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://uiuing.top/tags/Linux/"},{"name":"Git","slug":"Git","permalink":"http://uiuing.top/tags/Git/"}]},{"title":"Javascript：实现单/双周卫生表自动轮替","date":"2017-12-18T16:00:00.000Z","path":"2017/12/19/W1_javascript/","content":"<blockquote>\n<p>身为班上的卫生委员，你是不是因为每天要提醒同学打扫卫生而感到烦恼?<br>现在我们就来解决这个麻烦，每天只要发个链接到群里就好了．</p>\n</blockquote>\n<p><code>本项目涉及云空间，有服务器的同学可以自由扩展</code><br><code>在该项目中我所使用的为:</code><br><code>GitHub(yourGitHubname.github.io/) and 云图片储存为:</code><a href=\"www.tietuku.com\">www.tietuku.com</a> </p>\n<a id=\"more\"></a>\n\n<hr>\n<p><strong>本项目所涉及知识：</strong></p>\n<blockquote>\n<p>1．Javascript</p>\n</blockquote>\n<blockquote>\n<p>2．GitHub平台基本使用</p>\n</blockquote>\n<blockquote>\n<p>3．Git仓库管理</p>\n</blockquote>\n<blockquote>\n<p>4．图片云储存平台使用</p>\n</blockquote>\n<p>需要一定github管理基础 &amp; HTML基础</p>\n<p></p>\n\n\n\n<p><br></br></p>\n<h2 id=\"1-我们先把云图片储存给解决掉\"><a href=\"#1-我们先把云图片储存给解决掉\" class=\"headerlink\" title=\"1.我们先把云图片储存给解决掉\"></a><strong>1.我们先把云图片储存给解决掉</strong></h2><p><br></br></p>\n<h3 id=\"1-1-准备：\"><a href=\"#1-1-准备：\" class=\"headerlink\" title=\"1.1 准备：\"></a>1.1 准备：</h3><blockquote>\n<p>单周日卫生表图片<br>双周日卫生表图片<br>大扫除卫生表图片</p>\n</blockquote>\n<p><code>大家可以自由扩展，本人是根据本人环境来开发的</code></p>\n<p>###1.2 开始：</p>\n<blockquote>\n<p>１.登录云图片储存空间（推荐一个免费平台：<a href=\"http://www.tietuku.com/\">www.tietuku.com</a>）<br>２．上传图片<br>３．自己找到如何可以将上传的图片外链的方法<br>例：<em>http:// domain name / Catalog / your picture.jpg</em></p>\n</blockquote>\n<p><br></br><br><br></br></p>\n<h2 id=\"2-解决了图片存储问题，现在我们来用-javascript-代码实现功能\"><a href=\"#2-解决了图片存储问题，现在我们来用-javascript-代码实现功能\" class=\"headerlink\" title=\"2. 解决了图片存储问题，现在我们来用 javascript 代码实现功能\"></a><strong>2. 解决了图片存储问题，现在我们来用 javascript 代码实现功能</strong></h2><p><br></br></p>\n<h3 id=\"我们先需要整理思路：\"><a href=\"#我们先需要整理思路：\" class=\"headerlink\" title=\"我们先需要整理思路：\"></a>我们先需要整理思路：</h3><p>\n</p>\n#### 手绘js思维导图：\n![enter image description here](/images/swdt1.jpg)\n\n<h4 id=\"难点：\"><a href=\"#难点：\" class=\"headerlink\" title=\"难点：\"></a>难点：</h4><blockquote>\n<p>１．如何get周数　<br>２．周数判断，然后打印出＂明天＂的卫生打扫表</p>\n</blockquote>\n<h3 id=\"关键代码：\"><a href=\"#关键代码：\" class=\"headerlink\" title=\"关键代码：\"></a>关键代码：</h3><blockquote>\n<p><strong><code>new Date().getDay();</code> //将返回现在时间</strong><br>星期天～星期六：0  1  2  3  4  5  6<br>参考资料：<a href=\"http://www.w3school.com.cn/jsref/jsref_obj_date.asp\">JavaScript的Date对象</a></p>\n<p><strong><code>window.location.href=&quot;　URL　&quot;;</code> //跳转网页</strong><br>例：<code>window.location.href=&quot; &quot;https://uiuing.github.io/&quot;</code>;`  这是我blog的链接 (&gt; v &lt;) </p>\n<blockquote>\n<p>大家可以不加<code>http://</code> 也可以　但建议加<code>http://</code> or <code>https://</code><br>my blog 可以直接访问 <a href=\"https://uiuing.github.io/\">uiuing.top</a>　　(＞. ＜)</p>\n</blockquote>\n<p><strong>小知识</strong>：</p>\n<blockquote>\n<p><code>http</code> 是 <code>协议</code> （<a href=\"https://baike.baidu.com/item/http/243074?fr=aladdin\">http协议</a>）　<br><code>https</code> is <code>http</code> 的<code>加密</code>　（<a href=\"https://baike.baidu.com/item/https\">https</a>）　<br>应有免费的<code>ssl</code>体验 （<a href=\"https://baike.baidu.com/item/ssl\">ssl</a>） （<a href=\"https://baike.baidu.com/item/ssh/10407\">ssh</a>）</p>\n</blockquote>\n<blockquote>\n<p>判断语法：</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (条件)        &#x2F;&#x2F;if判断</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> \t只有当条件为 true 时执行的代码</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">else if (...)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t只有当if条件为 true 时执行的代码</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else(...)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t只有当所以 if条件为 falsh 时执行的代码</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><br></br><br><strong><code>javascript源码</code></strong></p>\n<hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">alert(&quot;请打扫好卫生！查看明天卫生请点击“确定”&quot;);</span><br><span class=\"line\">  </span><br><span class=\"line\">var date &#x3D; new Date().getDay();</span><br><span class=\"line\">&#x2F;&#x2F;get time 并赋值</span><br><span class=\"line\"></span><br><span class=\"line\">date++;</span><br><span class=\"line\">&#x2F;&#x2F;意为：显示明天明天的卫生　date++ 可以写成 date &#x3D; date + 1 ;</span><br><span class=\"line\"></span><br><span class=\"line\">if(date &#x3D; 7)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">date &#x3D; 0 ;&#96;  ** &#96;  </span><br><span class=\"line\">&#x2F;&#x2F;没有７　只有　０（星期天）</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">if(date &#x3D; 2 &amp;&amp; 4 &amp;&amp; 6) </span><br><span class=\"line\">&#x2F;&#x2F;当time &#x3D;　周　2,4,6　时　</span><br><span class=\"line\">&#123;　　&#x2F;&#x2F;双</span><br><span class=\"line\">window.location.href&#x3D;&quot;jpg&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">else if(date &#x3D; 3 &amp;&amp; 5 &amp;&amp; 0)</span><br><span class=\"line\">&#x2F;&#x2F;当time &#x3D; 周　3,5,0 时</span><br><span class=\"line\">&#123;　　&#x2F;&#x2F;单</span><br><span class=\"line\">window.location.href&#x3D;&quot;jpg&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">else if(date &#x3D; 1)           </span><br><span class=\"line\"> &#x2F;&#x2F;当time &#x3D; 周 1 时</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">window.location.herf&#x3D;&quot;jpg&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; © 2017 uiuing  uiuing.top</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>大家可以复制粘贴然后进行修改，链接为云图片储存平台所提供给你的你指定的图片外链</strong><br>大家可复制范例代码用浏览器运行，看看是什么效果哦~</p>\n<p><br></br></p>\n<h2 id=\"3-最后一步！-使你的成果可以通过外网可以访问！\"><a href=\"#3-最后一步！-使你的成果可以通过外网可以访问！\" class=\"headerlink\" title=\"3. 最后一步！ 使你的成果可以通过外网可以访问！\"></a>3. 最后一步！ 使你的成果可以通过外网可以访问！</h2><blockquote>\n<p>将你制作的js代码保存为    ：  <code>English name.html</code> </p>\n</blockquote>\n<h4 id=\"将该文件上传到你的GitHub-blog-根目录\"><a href=\"#将该文件上传到你的GitHub-blog-根目录\" class=\"headerlink\" title=\"将该文件上传到你的GitHub blog 根目录 !\"></a>将该文件上传到你的GitHub blog 根目录 !</h4><blockquote>\n<p><code>git remote add origin git@github.com:stormzhang/test.git</code><br>//连接你的github仓库，也可通过ssh配置，origin为仓库名<br><code>git push origin master</code>     //将代码提交到不同仓库中，可以指定分支<br><code>git pull origin master</code>     //先将github上的代码pull下来<br><code>git push origin master</code>   //上传至该分支</p>\n</blockquote>\n<p></p>\n<br></br>\n\n<h3 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问:\"></a>访问:</h3><blockquote>\n<p>your github name<code>.github.io / </code>Catelog English name<code>.html</code><br>（1.手动上传 ，2.使用git命令）</p>\n<p>如果你的github blog绑定域名那可以：  your domain name <code>/</code> Catalog English name<code>.html</code></p>\n</blockquote>\n<hr>\n<p><br></br></p>\n<p><a href=\"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=KVNBTFpBQFxAXEVIaVhYB0pGRA\">意见反馈</a></p>\n","excerpt":"身为班上的卫生委员，你是不是因为每天要提醒同学打扫卫生而感到烦恼?现在我们就来解决这个麻烦，每天只要发个链接到群里就好了． 本项目涉及云空间，有服务器的同学可以自由扩展在该项目中我所使用的为:GitHub(yourGitHubname.github.io/) and 云图片储存为:www.tietuku.com","categories":[{"name":"Whimsical","slug":"Whimsical","permalink":"http://uiuing.top/categories/Whimsical/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://uiuing.top/tags/Git/"},{"name":"Javascript","slug":"Javascript","permalink":"http://uiuing.top/tags/Javascript/"}]}]